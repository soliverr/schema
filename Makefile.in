#

SHELL           = /bin/bash
INSTALL         = install
top_srcdir      = @top_srcdir@
srcdir          = @srcdir@
VPATH           = @srcdir@

# Package identification ---------------------------------------------------------------
SECTION         = @SECTION@
PACKAGE_NAME    = @PACKAGE_NAME@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_STRING  = @PACKAGE_STRING@

# Base directories ---------------------------------------------------------------------
prefix          = @prefix@
exec_prefix     = @exec_prefix@
sbindir         = @sbindir@
libdir          = @libdir@
libexecdir      = @libexecdir@
sysconfdir      = @sysconfdir@
confdir         = @confdir@
localstatedir   = @localstatedir@
datarootdir     = @datarootdir@
datadir         = @datadir@
logdir          = @logdir@
docdir          = @docdir@

# Destination dir
DESTDIR         =

# Executable name
run_prg         = $(SECTION)-$(PACKAGE_NAME)

.PHONY: expand
.PHONY: install install-dirs install-base-dirs install-docs install-files install-config install-sql install-sh clean distclean mostlyclean 

install: expand install-dirs install-docs install-files

expand: _pkg-functions config.vars
	chmod +x $(srcdir)/build_expand.sh
	$(srcdir)/build_expand.sh _pkg-functions
	$(srcdir)/build_expand.sh config.vars

install-dirs: install-base-dirs
	#$(INSTALL) --directory --mode 755 $(DESTDIR)$(datadir)/tbsp
	$(INSTALL) --directory --mode 755 $(DESTDIR)$(datadir)/users
	#$(INSTALL) --directory --mode 755 $(DESTDIR)$(datadir)/triggers
	#$(INSTALL) --directory --mode 755 $(DESTDIR)$(datadir)/procedures
	#$(INSTALL) --directory --mode 755 $(DESTDIR)$(datadir)/directories

install-base-dirs:
	$(INSTALL) --directory --mode 755 $(DESTDIR)$(confdir)
	$(INSTALL) --directory --mode 755 $(DESTDIR)$(logdir)
	$(INSTALL) --directory --mode 755 $(DESTDIR)$(libexecdir)

install-docs:
	$(INSTALL) --directory --mode 755 $(DESTDIR)$(docdir)
	if [ -r README ] ; then $(INSTALL) --mode 0644 README $(DESTDIR)$(docdir) ; fi

install-files: install-config install-sql install-sh
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-tbsps
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-users
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-roles
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-profiles
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-triggers
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-directories
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-procedures
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-roles-users
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-drop-all
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-tbsps
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-users
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-roles
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-profiles
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-triggers
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-directories
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-procedures
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-all
	ln -s ./$(run_prg) $(DESTDIR)$(sbindir)/$(run_prg)-create-roles-users

install-config:
	$(INSTALL) --mode 664 config.vars $(DESTDIR)$(confdir)/$(PACKAGE_NAME).conf
	$(INSTALL) --mode 664 define.sql  $(DESTDIR)$(confdir)/$(PACKAGE_NAME)-define.sql

install-sql:
	-for f in `ls dirs_*.sql` ; do \
	  $(INSTALL) -D --mode 644 $$f $(DESTDIR)$(confdir) ; \
	done
	-for f in `ls *.sql | grep -v 'define.\?\.sql'` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir) ; \
	done
	-for f in `ls tbsp/*.sql` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir)/tbsp ; \
	done
	-for f in `ls users/*.sql` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir)/users ; \
	done
	-for f in `ls triggers/*.sql` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir)/triggers ; \
	done
	-for f in `ls procedures/*.sql` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir)/procedures ; \
	done
	-for f in `ls directories/*.sql` ; do \
	  $(INSTALL) --mode 644 $$f $(DESTDIR)$(datadir)/directories ; \
	done

install-sh:
	for f in `ls -1 *.sh | grep -v '.*build.sh\|run.sh\|build_expand.sh'` ; do \
	  $(INSTALL) --mode 755 $$f $(DESTDIR)$(libexecdir) ; \
	done
	$(INSTALL) -D --mode 755 run.sh $(DESTDIR)/$(sbindir)/$(run_prg)

clean:
	-rm -f run.sh dirs_billing.sql _pkg-functions build_expand.sh config.vars
	-rm -f create_billing.sh create_parser.sh create_raddb.sh
	-rm -f Makefile config.h config.status config.cache config.log

distclean: clean
	-rm -rf autom4te.cache
	-find . -type f -iwholename '*~' -exec rm -fv {} ';'
	if [ -d test ] ; then rm -rf test; fi
	if [ -d inst ] ; then rm -rf inst; fi

mostlyclean: distclean

maintainer-clean: distclean
	fakeroot ./debian/rules clean || true

# automatic re-running of configure if the configure.ac file has changed
${srcdir}/configure: configure.ac
	cd ${srcdir} && autoconf

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

